{"version":3,"file":"favorites.js","sources":["../src/js/favorites.js"],"sourcesContent":["import icons from '../images/icons.svg';\nimport axios from 'axios';\nimport { handleModalWindow } from './modal-window.js';\n\nfunction capitalizeFirstLetter(str) {\n  if (str && typeof str === 'string') {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  return str;\n}\n\nasync function createExerciseCardsFromLocalStorage() {\n  const favCards = JSON.parse(localStorage.getItem('favorites')) || [];\n  const wrapperSecnd = document.getElementById('wrapper-secnd');\n\n  // Якщо немає улюблених вправ, показуємо повідомлення\n  if (!favCards || favCards.length === 0) {\n    wrapperSecnd.innerHTML =\n      '<li class=\"text-exer\"><p>It appears that you havent added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</p></li>';\n    return;\n  }\n\n  // Функція для отримання даних вправи за ідентифікатором\n  const fetchExerciseData = async id => {\n    try {\n      const response = await axios.get(\n        `https://your-energy.b.goit.study/api/exercises/${id}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching exercise data', error);\n      return null;\n    }\n  };\n\n  // Отримуємо дані для всіх улюблених вправ\n  const exercisesData = await Promise.all(\n    favCards.map(id => fetchExerciseData(id))\n  );\n\n  // Фільтруємо в разі помилок при запитах (якщо повернеться null)\n  const validExercises = exercisesData.filter(exercise => exercise !== null);\n\n  // Якщо вправи є, рендеримо їх\n  if (validExercises.length > 0) {\n    const cardsHtml = validExercises\n      .map(\n        ({ _id, name, bodyPart, target, burnedCalories, time }) =>\n          `\n     <li class=\"exr-card fav-exr-card\">\n           <div class=\"workout-title\">\n             <div class=\"workout-title-left fav-workout-title-left\">\n               <p class=\"workout-title-name\">WORKOUT</p>\n               <svg data-modal=\"${_id}\" class=\"trash-icon\" width=\"16\" height=\"16\">\n                   <use href=\"${icons}#icon-trash\"></use>\n               </svg>\n             </div>\n          <div class=\"workout-title-right\">\n           <button aria-label=\"start-trainig\" class=\"workout-start\" data-modal-open=\"${_id}\">Start\n           <svg class=\"workout-arw\" width=\"16\" height=\"16\">\n             <use href=\"${icons}#arw-top\"></use>\n           </svg>\n           </button>\n         </div>\n           </div>\n           <div class=\"workout-details\">\n             <p class=\"workout-run-man-wrapper\">\n               <svg class=\"workout-run-man\" width=\"16\" height=\"16\">\n                 <use href=\"${icons}#runn-man\"></use>\n               </svg>\n             </p>\n             <p class=\"workout-details-disc\">${capitalizeFirstLetter(name)}</p>\n           </div>\n           <div class=\"workout-stats\">\n             <p class=\"workout-stats-cal\"><span class=\"workout-stats-title\">Burned calories: </span>${burnedCalories} / ${time}</p>\n             <p class=\"workout-stats-part\"><span class=\"workout-stats-title\">Body part: </span>${capitalizeFirstLetter(\n               bodyPart\n             )}</p>\n             <p class=\"workout-stats-target\"><span class=\"workout-stats-title\">Target: </span>${capitalizeFirstLetter(\n               target\n             )}</p>\n           </div>\n         </li>\n   `\n      )\n      .join('');\n\n    // Вставляємо HTML карток у контейнер\n    wrapperSecnd.innerHTML = cardsHtml;\n  } else {\n    wrapperSecnd.innerHTML =\n      '<li class=\"text-exer\"><p>Something went wrong. Please try again later.</p></li>';\n  }\n}\nfunction removeExerciseFromFavoritesWithAnimation(exerciseId) {\n  const cardToDelete = document\n    .querySelector(`.trash-icon[data-modal=\"${exerciseId}\"]`)\n    .closest('.exr-card');\n\n  // Додаємо клас для анімації\n  cardToDelete.classList.add('fade-out');\n\n  // Видаляємо елемент після завершення анімації\n  setTimeout(() => {\n    // Видаляємо вправу з localStorage\n    let favEx = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    // Фільтруємо масив для видалення ID вправи\n    const updatedFavorites = favEx.filter(id => id !== exerciseId);\n\n    // Оновлюємо localStorage\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n    // Видаляємо картку з DOM\n    cardToDelete.remove();\n\n    // Якщо карток більше немає, показуємо повідомлення\n    if (updatedFavorites.length === 0) {\n      createExerciseCardsFromLocalStorage();\n    }\n  }, 300);\n}\n// щоб картки візуально оновлялися після видалення з модального вікна\nwindow.removeExerciseFromFavoritesWithAnimation = removeExerciseFromFavoritesWithAnimation;\n// Обробник подій для видалення вправи\ndocument.getElementById('wrapper-secnd').addEventListener('click', event => {\n  const trashIcon = event.target.closest('.trash-icon');\n  if (trashIcon) {\n    const exerciseId = trashIcon.getAttribute('data-modal');\n    removeExerciseFromFavoritesWithAnimation(exerciseId);\n  }\n});\n\n// Викликаємо функцію при завантаженні сторінки\ndocument.addEventListener(\n  'DOMContentLoaded',\n  createExerciseCardsFromLocalStorage\n);\n\n// модальне вікно при натисненні Start\n\ndocument\n  .getElementById('wrapper-secnd')\n  .addEventListener('click', async event => {\n    // Знаходимо кнопку \"Start\" за атрибутом data-modal-open\n    const startButton = event.target.closest('[data-modal-open]');\n\n    if (startButton) {\n      // Викликаємо функцію handleModalWindow, щоб завантажити дані та відкрити модальне вікно\n      await handleModalWindow(event);\n    }\n  });\n"],"names":["capitalizeFirstLetter","str","createExerciseCardsFromLocalStorage","favCards","wrapperSecnd","fetchExerciseData","id","axios","error","validExercises","exercise","cardsHtml","_id","name","bodyPart","target","burnedCalories","time","icons","removeExerciseFromFavoritesWithAnimation","exerciseId","cardToDelete","updatedFavorites","event","trashIcon","handleModalWindow"],"mappings":"2GAIA,SAASA,EAAsBC,EAAK,CAClC,OAAIA,GAAO,OAAOA,GAAQ,SACjBA,EAAI,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAI,MAAM,CAAC,EAE3CA,CACT,CAEA,eAAeC,GAAsC,CACnD,MAAMC,EAAW,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAC5DC,EAAe,SAAS,eAAe,eAAe,EAG5D,GAAI,CAACD,GAAYA,EAAS,SAAW,EAAG,CACtCC,EAAa,UACX,iNACF,MACD,CAGD,MAAMC,EAAoB,MAAMC,GAAM,CACpC,GAAI,CAIF,OAHiB,MAAMC,EAAM,IAC3B,kDAAkDD,CAAE,EAC5D,GACsB,IACjB,OAAQE,EAAO,CACd,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,IACR,CACL,EAQQC,GALgB,MAAM,QAAQ,IAClCN,EAAS,IAAIG,GAAMD,EAAkBC,CAAE,CAAC,CAC5C,GAGuC,OAAOI,GAAYA,IAAa,IAAI,EAGzE,GAAID,EAAe,OAAS,EAAG,CAC7B,MAAME,EAAYF,EACf,IACC,CAAC,CAAE,IAAAG,EAAK,KAAAC,EAAM,SAAAC,EAAU,OAAAC,EAAQ,eAAAC,EAAgB,KAAAC,CAAM,IACpD;AAAA;AAAA;AAAA;AAAA;AAAA,kCAKwBL,CAAG;AAAA,gCACLM,CAAK;AAAA;AAAA;AAAA;AAAA,uFAIkDN,CAAG;AAAA;AAAA,0BAEhEM,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAQDA,CAAK;AAAA;AAAA;AAAA,+CAGYlB,EAAsBa,CAAI,CAAC;AAAA;AAAA;AAAA,sGAG4BG,CAAc,MAAMC,CAAI;AAAA,iGAC7BjB,EAClFc,CACf,CAAc;AAAA,gGACkFd,EACjFe,CACf,CAAc;AAAA;AAAA;AAAA,IAIP,EACA,KAAK,EAAE,EAGVX,EAAa,UAAYO,CAC7B,MACIP,EAAa,UACX,iFAEN,CACA,SAASe,EAAyCC,EAAY,CAC5D,MAAMC,EAAe,SAClB,cAAc,2BAA2BD,CAAU,IAAI,EACvD,QAAQ,WAAW,EAGtBC,EAAa,UAAU,IAAI,UAAU,EAGrC,WAAW,IAAM,CAKf,MAAMC,GAHM,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,IAG9B,OAAOhB,GAAMA,IAAOc,CAAU,EAG7D,aAAa,QAAQ,YAAa,KAAK,UAAUE,CAAgB,CAAC,EAGlED,EAAa,OAAM,EAGfC,EAAiB,SAAW,GAC9BpB,GAEH,EAAE,GAAG,CACR,CAEA,OAAO,yCAA2CiB,EAElD,SAAS,eAAe,eAAe,EAAE,iBAAiB,QAASI,GAAS,CAC1E,MAAMC,EAAYD,EAAM,OAAO,QAAQ,aAAa,EACpD,GAAIC,EAAW,CACb,MAAMJ,EAAaI,EAAU,aAAa,YAAY,EACtDL,EAAyCC,CAAU,CACpD,CACH,CAAC,EAGD,SAAS,iBACP,mBACAlB,CACF,EAIA,SACG,eAAe,eAAe,EAC9B,iBAAiB,QAAS,MAAMqB,GAAS,CAEpBA,EAAM,OAAO,QAAQ,mBAAmB,GAI1D,MAAME,EAAkBF,CAAK,CAEnC,CAAG"}